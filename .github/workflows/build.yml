name: build

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: patch auditwheel
        if: runner.os == 'Linux'
        run: |
          which python
          auditwheel --version
          python patch_auditwheel_whitelist.py

      - name: Download openbabel
        run: |
          which python
          pip3 download openbabel==3.1.1.1
          tar xzf openbabel-3.1.1.1.tar.gz
          mv openbabel-3.1.1.1/* .
          rm openbabel-3.1.1.1.tar.gz
          rm -rf openbabel-3.1.1.1
          rm setup.py
          mv obsetup.py setup.py
          rm openbabel/__init__.py
          mv __init__.py openbabel

      - name: Build Wheels
        uses: pypa/cibuildwheel@v2.19.0
        env:
          CIBW_BUILD_VERBOSITY: 2
          CIBW_BUILD: cp38-manylinux_x86_64
          CIBW_SKIP: pp* *musllinux*
          CIBW_ARCHS_LINUX: x86_64
          CIBW_ARCHS_MACOS: x86_64
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_BEFORE_BUILD_MACOS: brew reinstall open-babel
          CIBW_BEFORE_BUILD_LINUX: dnf install -y epel-release && dnf install -y swig gcc gcc-c++ openbabel-devel
          #CIBW_REPAIR_WHEEL_COMMAND_LINUX: which python && pip --version && which auditwheel && auditwheel --version

      - run: |
          ls -l wheelhouse

      - uses: actions/upload-artifact@v4
        with:
          path: ./wheelhouse/*.whl

      - name: Deployment
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./wheelhouse/*.whl

